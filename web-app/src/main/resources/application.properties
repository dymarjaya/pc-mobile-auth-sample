#
# Configuration file for the sample
#

### Colorful console
spring.output.ansi.enabled=ALWAYS

### Server application listening port configuration
server.port=8080

### H2 Database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

### Postgres Database
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create-drop

### PC API URL
#For demo purposes - request from Airome / SafeTech. For your own installation - use your own
#$pc_url = http://abs.net.local/pc-api	// <--- sample value
payconfirm.pc_url = http://192.168.159.162:8080/pc-api/

### PC system-id (see docs: https://repo.payconfirm.org/server/doc/v5/rest-api/#systems-endpoint)
#For demo purposes - request from Airome / SafeTech. For your own installation - use your own
#payconfirm.system_id = 4474a630-db74-4f2e-bf69-8b66b5c5cadf	// <--- sample value
payconfirm.system_id = 0b3c8706-89d7-4378-8a96-707d5939c0f1

### Callback Receiver URL to receive callbacks from PC Server (see docs: https://repo.payconfirm.org/server/doc/v5/rest-api/#transactions-endpoint)
#For this sample must be address of /pc_callback_reciever code
#payconfirm.callback_receiver_url = http://abs.net.local/pc_callback_reciever	// <--- sample value
payconfirm.callback_receiver_url = http://192.168.166.1:8080/pc_callback_reciever

### Make alias and activation code persistent
#If set to true, then alias will be persistent (e.g. can be used many times, pc user will be
#updated each time, no license will be eaten). If set to false, then alias is one-time use only
payconfirm.persistent_alias = true

### File name and location to store events post log
#We can use this log data for fraud detection system / business analytic purposes
payconfirm.events_post_url_log = fds.log